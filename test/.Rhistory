z.out <- zelig(admit ~ gre + gpa, data = mydata, model="logit",
epsilon=.0001)
summary(z.out)
x.out <- setx(z.out, gpa=1.3, gre=4500, speed=12)
set.seed(42)
s.out <- sim(z.out, x = x.out, num=1000)
summary(s.out)
z5 <- zlogit$new()
z5$zelig(admit ~ gre + gpa, data = mydata,
epsilon=.0001)
# removed epsilon to compare with Zelig 4
z5$zelig(admit ~ gre + gpa, data = mydata)
z5
z5$setx(gpa=1.3, gre=4500, speed=12)
set.seed(42)
z5$sim(num=1000)
z5$summarize()
summary(s.out)
z5$cite()
z5$summarize()
summary(s.out)
z5 <- zprobit$new()
z5$zelig(admit ~ gre + gpa, data = mydata,
epsilon=.0001)
# removed epsilon to compare with Zelig 4
z5$zelig(admit ~ gre + gpa, data = mydata)
z5
z5$setx(gpa=1.3, gre=4500, speed=12)
set.seed(42)
z5$sim(num=1000)
z5$summarize()
z5$cite()
library(Zelig)
# epsilon does not seem to be taken into account
z.out <- zelig(admit ~ gre + gpa, data = mydata, model="probit",
epsilon=.0001)
summary(z.out)
x.out <- setx(z.out, gpa=1.3, gre=4500, speed=12)
set.seed(42)
s.out <- sim(z.out, x = x.out, num=1000)
summary(s.out)
z5$summarize()
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-ls"))
source(file.path("..", "R", "model-ls.R"))
library(Zelig)
z.out <- zelig(dist ~ speed, cars, model="ls")
summary(z.out)
x.out <- setx(z.out, speed=30)
set.seed(42)
s.out <- sim(z.out, x.out)
summary(s.out)
z5 <- zls$new()
z5$zelig(dist ~ speed, data=cars)
z5
z5$model.call
z5$zelig.call
z5$setx(speed=30)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$cite()
z5$toJSON()
z5$.->formula
z5$authors
s.out <- sim(z.out, x.out)
summary(s.out)
set.seed(42)
s.out <- sim(z.out, x.out)
summary(s.out)
z5$sim(num=100)
z5$summarize()
z5$cite()
source(file.path("..", "R", "model-zelig.R"
source(file.path("..", "R", "model-zelig.R"
source(file.path("..", "R", "model-zelig.R"
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-ls.R"))
source(file.path("..", "R", "wrappers.R"))
z.out <- zeligw(dist ~ speed, model="ls", data=cars)
print(z.out)
x.out <- setxw(z.out, speed=30)
s.out <- simw(z.out, x.out)
summaryw(s.out)
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-lognormal.R"))
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
+ data = coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
summary(z.out)
x.low <- setx(z.out, numst2 = 0)
s.out <- sim(z.out, x = x.low, x1 = x.high)
x.low <- setx(z.out, numst2 = 0)
s.out <- sim(z.out, x = x.low, x1 = x.high)
s.out <- sim(z.out, x = x.low)
summary(s.out)
data(coalition)
z5 <- zlognorm$new()
Surv(duration, ciep12)
Surv
summary(s.out)
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(trade = 50)
s.out <- sim(z.out, x = x.low, num=1000)
summary(s.out)
s.out <- sim(z.out, x = x.low, num=1000)
summary(s.out)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5$zelig.call
z5$model.call
survival::survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = "lognorm", dist = "lognormal")
debug(survreg)
survival::survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = "lognorm", dist = "lognormal")
Term
Terms
Y
survival::survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = "lognorm", dist = "lognormal")
m
m
fit
undebug(survreg)
survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = "lognorm", dist = "lognormal")
numst2, data = coalition, model = FALSE, dist = "lognormal")
survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = FALSE, dist = "lognormal")
z5$zelig.call
data(coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
summary(z.out)
z.out$formula
z.out$call
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
z5
summary(z.out)
summary(z.out)
z5
z5$setx(numst2 = 0)
x.low <- setx(z.out, numst2 = 0)
x.low
debug(z5$setx)
z5$setx(numst2 = 0)
print(n)
z5$setx(numst2 = 0)
formula(.self$zelig.out)
ldata
model.frame(formula(.self$zelig.out), ldata)
survival:::model.frame.survreg
survival:::model.frame.survreg
survival:::model.frame.survreg(formula(.self$zelig.out))
survival:::model.frame.survreg(formula(.self$zelig.out)
)
survival:::model.frame.survreg(formula(.self$zelig.out), ldata)
names(s.out)
names(x.low)
x.low$matrix
formula(.self$zelig.out)
survival:::model.frame.survreg(Surv(duration, ciep12) ~ fract + numst2)
model.frame(duration ~ fract + numst2)
model.frame(duration ~ fract + numst2, data=coalition)
Surv
z5$setx.out
set.seed(42)
z5$sim(num=1000)
z5$summarize()
z5$cite()
survreg(formula = Surv(duration, ciep12) ~ fract +
numst2, data = coalition, model = FALSE, dist = "lognormal")
str(x.low)
x.low$updated
duration
coalition$duration
model.matrix(x.low$updated)
model.frame(x.low$updated)
x.low$updated
formula
formula(z.out)
model.frame(formula(z.out), x.low$updated)
formula(.self$zelig.out)
formula(z5$zelig.out)
z5$formula
z5$formula[[1]]
z5$formula[[2]]
z5$formula[[3]]
z5$formula[[2]]
formula(.self$zelig.out)
Surv
z5$formula[[3]]
z5$formula[[2]]
Surv(coalition$duration, coalition$ciep12)
x.low$updated
x.low$data
x.low$matrix
x.low$values
x.low$fn
x.low$cond
x.low$new.data
s.out
z5$param(10)
z5$simparam
z5$simalpha
source(file.path("..", "R", "model-zelig.R"))
library(Zelig)
data(coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
summary(z.out)
x.low <- setx(z.out, numst2 = 0)
s.out <- sim(z.out, x = x.low, num=1000)
summary(s.out)
# Zelig 5 code:
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=1000)
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-ls.R"))
z5 <- zls$new()
z5$zelig(dist ~ speed, data=cars)
z5
z5$model.call
z5$zelig.call
z5$setx(speed=30)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$cite()
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
set.seed(42)
z5$sim(num=1000)
.self <- z5
coef(.self$zelig.out)
c(coef, log(.self$zelig.out$scale))
vcov(.self$zelig.out)
mvrnorm(num, mu=mu, Sigma=cov)
coef <- coef(.self$zelig.out)
mu <- c(coef, log(.self$zelig.out$scale))
cov <- vcov(.self$zelig.out)
mvrnorm(num, mu=mu, Sigma=cov)
num=10
simulations <- mvrnorm(num, mu=mu, Sigma=cov)
.self$simparam = as.matrix(simulations[, 1:length(coef)])
.self$simalpha = as.matrix(simulations[, -(1:length(coef))])
.self
.self$simalpha
.self$simparam
alpha <- .self$simalpha
beta <- .self$simparam
coef <- .self$simparam
coef
x.low
x.low$matrix
coef %*% x.low$matrix
coef %*% t(x.low$matrix)
theta <- as.matrix(apply(eta, 2, linkinv))
eat <- coef %*% t(x.low$matrix)
eta <- coef %*% t(x.low$matrix)
linkinv = survreg.distributions[["lognormal"]]$itrans
theta <- as.matrix(apply(eta, 2, linkinv))
ev <- exp(log(theta) + 0.5 * (exp(alpha))^2)
dimnames(ev) <- dimnames(theta)
ev <- .self$simparam %*% t(x)
ev <- .self$simparam %*% t(x.low$matrix)
ev
mean(ev)
summary(s.out)
set.seed(42)
s.out <- sim(z.out, x = x.low, num=10)
summary(s.out)
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
z5$se
z5$setx.out
debug(z5$setx)
z5$setx.out
z5$setx(numst2 = 0)
ldata
x.low$matrix
model.frame(formula(.self$zelig.out), ldata)
formula(.self$zelig.out)
formula(.self$zelig.out)[[3]]
model.frame(formula(.self$zelig.out)[[3]], ldata)
model.frame(formula(.self$zelig.out), ldata)
f <- formula(.self$zelig.out)
f[[1]]
f[[2]]
f[[2]] <- duration
f[[2]] <- "duration"
f[[2]] <- quote(duration)
model.matrix(f, ldata)
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=1000)
z5$summarize()
z5$cite()
set.seed(42)
s.out <- sim(z.out, x = x.low, num=10)
summary(s.out)
set.seed(42)
z5$sim(num=10)
z5$summarize()
z5$cite()
summary(s.out)
z5$summarize()
library(Zelig)
data(coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
summary(z.out)
x.low <- setx(z.out, numst2 = 0)
set.seed(42)
s.out <- sim(z.out, x = x.low, num=10)
summary(s.out)
s.out$model
s.out$x
s.out$stats
s.out$qi
s.out$titles
s.out$result
s.out$special.parameters
debug(qi.lognorm)
debug(Zelig:::qi.lognorm)
s.out <- sim(z.out, x = x.low, num=10)
debug(sim)
s.out <- sim(z.out, x = x.low, num=10)
param
s.out$x
s.out$num
s.out$stats
library(Zelig)
data(coalition)
z.out <- zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
summary(z.out)
x.low <- setx(z.out, numst2 = 0)
set.seed(42)
s.out <- sim(z.out, x = x.low, num=10)
summary(s.out)
param$alpha
param$coefficients
z5$simalpha
z5$simparam
survreg.distributions[["lognormal"]]$itrans
s.out
z5$setx.out
z5$linkinv
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=10)
z5$summarize()
summary(s.out)
.self$formula
formula(z5)
asOneSidedFormula(formula(z5))
require(Formula)
Formula(formula(z5))
F <- Formula(formula(z5))
rm(F)
F1 <- Formula(formula(z5))
f1[[1]]
F1[[1]]
Formula::model.part
Formula::model.part(F1)
Formula::model.part(F1, rhs)
model.frame(F1)
model.frame(F1, lhs = 1)
F1
model.frame(F1, lhs = 1, data=coalition)
f <- Formula(formula(.self$zelig.out))
model.matrix(F1, lhs = 1, data=coalition)
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=10)
z5$summarize()
z5$cite()
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=10)
z5$summarize()
source(file.path("..", "R", "utils.R"))
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=10)
z5$summarize()
z5$cite()
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-lognorm.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-lognorm.R"))
data(coalition)
z5 <- zlognorm$new()
z5$zelig(Surv(duration, ciep12) ~ fract + numst2, model = "lognorm",
data = coalition)
z5
z5$setx(numst2 = 0)
set.seed(42)
z5$sim(num=10)
z5$summarize()
z5$cite()
z5 <- zls$new()
source(file.path("..", "R", "model-ls.R"))
z5 <- zls$new()
z5$zelig(dist ~ speed, data=cars)
z5
z5$model.call
z5$zelig.call
z5$setx(speed=30)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$cite()
s.out <- sim(z.out, x.out)
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-bbinchoice.R"))
source(file.path("..", "R", "model-blogit.R"))
# Zelig 4 code:
library(Zelig)
library(ZeligChoice)
data(sanction)
z.out1 <- zelig(cbind(import, export) ~ coop + cost + target,
model = "blogit", data = sanction)
summary(z.out1)
x.low <- setx(z.out1, cost = 1)
set.seed(42)
s.out1 <- sim(z.out1, x.low, num=100)
summary(s.out1)
# Zelig 5 code:
undebug(sim)
data(sanction)
z.out1 <- zelig(cbind(import, export) ~ coop + cost + target,
model = "blogit", data = sanction)
summary(z.out1)
x.low <- setx(z.out1, cost = 1)
set.seed(42)
s.out1 <- sim(z.out1, x.low, num=100)
summary(s.out1)
# Zelig 5 code:
data(sanction)
z5 <- zblogit$new()
z5$zelig(cbind(import, export) ~ coop + cost + target, data = sanction)
z5
z5$setx(cost=1)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$cite()
