[@type='button']")
buttonElement <- firefox$findElementByXPath("//*[@id='myModal']/div/div/div/button")
firefox$findElementByClassName("x-form-cb-label")
firefox$findElementByClassName("x-form-radio")
r2 <- firefox$findElementByName("gxt.RadioGroup.0")
firefox$findElementByClassName("x-form-radio")
firefox$findElementByClassName("x-form-radio")$check()
firefox$findElementByClassName("x-form-radio")$checked()
firefox$findElementByClassName("x-form-radio")$checked
firefox$findElementByClassName("x-form-radio")
firefox$findElementByClassName("x-form-radio")$value
r <- firefox$findElementByClassName("x-form-radio")
r$click
r$click()
r$click()
r$clear()
r$getId()
r$getText()
r$getHtml()
firefox$findElementByClassName("x-form-cb-label")
install.packages("NMMAPSdata", contriburl = "http://www.ihapss.jhsph.edu/data/NMMAPS/R/", type = "source")
stopifnot
rats <- data.frame(id = paste0("rat",1:10),
sex = factor(rep(c("female","male"),each=5)),
weight = c(2,4,1,11,18,12,7,12,19,20),
length = c(100,105,115,130,95,150,165,180,190,175))
summary(rats)
ratsTable <- data.frame(id = paste0("rat",c(6,9,7,3,5,1,10,4,8,2)),
secretID = 1:10)
ratsTable
match(rats$weight)[ratsTable$id]
rats$weight[match(ratsTable$id, rats$id)]
rats
mydata <- read.csv("https://www.betydb.org/miscanthus_county_avg_yield.csv")
mydata <- read.csv("http://www.betydb.org/miscanthus_county_avg_yield.csv")
library(googleVis)
p <- gvisGeoChart(data = mydata, locationvar="STATE_NAME", colorvar = 'Avg_yield',
options= list(region="US", displayMode="regions",
resolution="provinces"))
plot(p)
library(googleVis)
install.packages("googleVis")
library(Zelig)
data(cars)
setwd("~/Google Drive/ARP/Talk_Francesca")
library(data.table)
DU <- fread("arp_unit_extended_with_init_date.csv")
# DU[, c(Year, Month)]
DSY <- DU[, list(AvgUnitStart = round(mean(Initial.Year.of.Operation, na.rm = TRUE)),
AvgUnitSO2 = mean(SO2..tons., na.rm = TRUE),
AvgUnitNOx = mean(NOx..tons., na.rm = TRUE),
TotalSO2 = sum(SO2..tons., na.rm = TRUE),
TotalNOx = sum(NOx..tons., na.rm = TRUE),
Facilities = sum(length(unique(Facility.ID..ORISPL.))),
Units = sum(length(unique(paste(Facility.ID..ORISPL., Unit.ID.Unique))))),
by = c("Year")]
setkeyv(DSY, "Year")
DSY
DF <- fread("arp_facility.csv")
DF[, Has.SO2.Scrub := Total.SO2.Scrub > 0]
DF[, Has.PM.Scrub := Total.PM.Scrub > 0]
DF[, Has.NOx.Scrub := Total.NOx.Scrub > 0]
DF[, Is.Coal := Total.Fuel1.IsCoal > 0]
DSM <- DF[, list(SO2 = sum(Total.SO2..tons.),
NOx = sum(Total.NOx..tons.),
AvgSO2 = mean(Total.SO2..tons.),
Percent.Scrub = sum(length(unique(Facility.ID..ORISPL.))) / sum(Has.SO2.Scrub),
Fac = sum(length(unique(Facility.ID..ORISPL.)))),
by = c("Year", "Month")]
DSM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
DSM[, Cap2010 := 850000]
library(ggplot2)
library(plyr)
library(reshape2)
library(scales)
M <- data.table:::melt.data.table(DSM,  id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx", "Cap2010"))
setkeyv(M, "Year", "Month")
setkeyv(DSM, "Year", "Month")
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = 2001, color = "blue")
MM
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = "2000-01-01", color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = 3001, color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[120]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[220]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[200]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[196]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[190]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[180]), color = "blue")
ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
ggsave(p, file = "timeseries.pdf")
ggsave(p, file = "timeseries.png")
M <- data.table:::melt.data.table(DSM,  id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx"))
setkeyv(M, "Year", "Month")
setkeyv(DSM, "Year", "Month")
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
DSM <- DF[, list(SO2 = sum(Total.SO2..tons.),
NOx = sum(Total.NOx..tons.),
AvgSO2 = mean(Total.SO2..tons.),
Percent.Scrub = sum(length(unique(Facility.ID..ORISPL.))) / sum(Has.SO2.Scrub),
Fac = sum(length(unique(Facility.ID..ORISPL.)))),
by = c("Year", "Month")]
DSM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
# DSM[, Cap2010 := 850000]
library(ggplot2)
library(plyr)
library(reshape2)
library(scales)
M <- data.table:::melt.data.table(DSM,  id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx"))
setkeyv(M, "Year", "Month")
setkeyv(DSM, "Year", "Month")
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
# MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
DSM <- DF[, list(SO2 = sum(Total.SO2..tons.),
NOx = sum(Total.NOx..tons.),
AvgSO2 = mean(Total.SO2..tons.),
Percent.Scrub = sum(length(unique(Facility.ID..ORISPL.))) / sum(Has.SO2.Scrub),
Fac = sum(length(unique(Facility.ID..ORISPL.)))),
by = c("Year", "Month")]
DSM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
# DSM[, Cap2010 := 850000]
library(ggplot2)
library(plyr)
library(reshape2)
library(scales)
M <- data.table:::melt.data.table(DSM,  id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx"))
setkeyv(M, "Year", "Month")
setkeyv(DSM, "Year", "Month")
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
# MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
names(MM)
M <- data.table:::melt.data.table(DSM,id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx"))
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
MM
DF <- fread("arp_facility.csv")
DF[, Has.SO2.Scrub := Total.SO2.Scrub > 0]
DF[, Has.PM.Scrub := Total.PM.Scrub > 0]
DF[, Has.NOx.Scrub := Total.NOx.Scrub > 0]
DF[, Is.Coal := Total.Fuel1.IsCoal > 0]
DSM <- DF[, list(SO2 = sum(Total.SO2..tons.),
NOx = sum(Total.NOx..tons.),
AvgSO2 = mean(Total.SO2..tons.),
Percent.Scrub = sum(length(unique(Facility.ID..ORISPL.))) / sum(Has.SO2.Scrub),
Fac = sum(length(unique(Facility.ID..ORISPL.)))),
by = c("Year", "Month")]
DSM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
# DSM[, Cap2010 := 850000]
library(ggplot2)
library(plyr)
library(reshape2)
library(scales)
M <- data.table:::melt.data.table(DSM,id.vars = c("Year", "Month"), measure.vars = c("SO2", "NOx"))
setkeyv(M, "Year", "Month")
setkeyv(DSM, "Year", "Month")
MM <- merge(M, DSM, by = c("Year", "Month"))
MM[, SO2 := NULL]
MM[, NOx := NULL]
# MM[, Cap2010 := NULL]
MM[, date := as.Date(paste(Year, Month, "1", sep = "/"), "%Y/%m/%d")]
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = := 850000, color = "blue") +
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "lightblue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[182]), color = "blue")
p
p
geom_vline(xintercept = as.numeric(MM$date[150]), color = "blue")
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[150]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[142]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[130]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[128]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[126]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[124]), color = "blue")
p
p <- ggplot(MM, aes(x=date, y=value)) + geom_line(aes(colour = variable)) +
geom_point(data = subset(MM, variable == "SO2"), aes(alpha = AvgSO2, size = Fac)) +
scale_color_discrete("Pollutants (tons)") + scale_size("Monitored facilities") +
scale_alpha("SO2 tons per facility") +
geom_hline(yintercept = 850000, color = "blue") +
geom_vline(xintercept = as.numeric(MM$date[122]), color = "blue")
p
ggsave(p, file = "timeseries.pdf")
ggsave(p, file = "timeseries.png")
ggsave(p, file = "timeseries.pdf", scale = 2)
setwd("~/Documents/Acid_Rain_Program/Closest_Location")
SO2 <- fread("SO2.csv")
facility <- fread("arp_facility.csv")
setkeyv(facility, c("Facility.Latitude", "Facility.Longitude"))
m <- SO2[, Longitude, Latitude]
f <- facility[, Facility.Longitude, Facility.Latitude]
setkey(m)
mu <- unique(m)
setkey(f)
fu <- unique(f)
mu <- cbind("Monitor", mu)
fu <- cbind("Facility", fu)
loc <- rbind(mu, fu, use.names=FALSE)
names(loc)[1] <- "Type"
## Plot
library(ggplot2)
library(maps)
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey10")
p <- p + geom_point(data=loc, aes(x=Longitude, y=Latitude, color = Type), size = 1)
p
min(facility$Facility.Latitude)
max(facility$Facility.Latitude)
max(facility$Facility.Longitude)
min(facility$Facility.Longitude)
loc
subset(loc, Latitude < 50)
subset(loc, 24< Latitude < 50)
subset(loc, 24 < Latitude & Latitude < 50)
subset(loc, 24 < Latitude & Latitude < 50 & -125 < Longitude )
subset(loc, 24 < Latitude & Latitude < 50 & -125 < Longitude & Longitude < -70)
sloc <- subset(loc, 24 < Latitude & Latitude < 50 & -125 < Longitude & Longitude < -70)
library(ggplot2)
library(maps)
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey10")
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 1)
p
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey80")
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 1)
p
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey80", size = 3)
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 1)
p
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey80")
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 3)
p
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey80")
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 2)
p
sloc <- subset(loc, 25 < Latitude & Latitude < 50 & -125 < Longitude & Longitude < -70)
library(ggplot2)
library(maps)
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon(data=all_states, aes(x=long, y=lat, group = group), colour="white", fill="grey80")
p <- p + geom_point(data=sloc, aes(x=Longitude, y=Latitude, color = Type), size = 2)
p
ggsave(p, file = "facilities_and_SO2monitors.pdf")
ggsave(p, file = "facilities_and_SO2monitors.png")
setwd("~/Documents/LocalGit/Zelig5 GIT/test")
library(MASS)
data(cars)
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-ls.R"))
# Zelig 4 code:
library(Zelig)
z.out <- zelig(dist ~ speed, cars, model = "ls")
summary(z.out)
x.out <- setx(z.out, speed = 30)
set.seed(42)
s.out <- sim(z.out, x.out, num = 100)
summary(s.out)
# Zelig 5 code:
z5 <- zls$new()
z5$zelig(dist ~ speed, data = cars)
z5
z5$model.call
z5$zelig.call
z5$setx(sascxasx = 9879, speed = 30, sdjchbsdc =87, kcsbc = 8787)
z5$setx(sascxasx = 9879)
z5$setx(speed = 30)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$cite()
setwd("~/Documents/LocalGit/Zelig5 GIT/test")
library(MASS)
library(jsonlite)
data(cars)
source(file.path("..", "R", "utils.R"))
source(file.path("..", "R", "model-zelig.R"))
source(file.path("..", "R", "model-ls.R"))
z5 <- zls$new()
z5$zelig(dist ~ speed, data = cars)
z5
z5$setx(speed = 30)
set.seed(42)
z5$sim(num=100)
z5$summarize()
z5$toJSON()
cat(z5$json)
toJSON(z5)
aslist(z5)
as.list(z5)
toJSON(as.list(z5))
zelig
cat(z5$json)
attributes(z5)
class(z5)
z5$.refClassDef
z5 <- zls$new()
z5$json
z5$text
z5$json()
z5$toJSON()
z5$json
m <- quote(zls)
m
m$new()
m <- "zls"
m$new()
zks
zls
call(zls, new)
call("zls", new)
eval(call("zls", new))
call("zls", new)
z5$initialize
call("zls", initialize)
eval(call("zls", initialize))
do.call("zls", initialize)
do.call("zls", new)
do.call(zls, new)
do.call("zls", new)
do.call("zls", list(new = new)
)
do.call("zls", list())
do.call("zls$new", list())
do.call("zls$new()", list())
eval("z5$new()")
as.function("z5$new()")
as.call("z5$new()")
as.call("z5$new", list())
as.call("z5$new"
)
z5 <- zls$new()$toJSON()
zls$new()$toJSON()$json
x <- zls$new()$toJSON()
x$json
x
zls$new()$toJSON()
cat(zls$new()$toJSON())
