zelig-gamma
~~~~~~

Gamma Regression for Continuous, Positive Dependent Variables

Use the gamma regression model if you have a positive-valued dependent
variable such as the number of years a parliamentary cabinet endures, or
the seconds you can stay airborne while jumping. The gamma distribution
assumes that all waiting times are complete by the end of the study
(censoring is not allowed).

Syntax
+++++

.. {r, eval = FALSE}
z.out <- zelig(Y ~ X1 + X2, model = "gamma", data = mydata)
x.out <- setx(z.out)
s.out <- sim(z.out, x = x.out, x1 = NULL)
.. ..

Example
+++++

Attach the sample data:

.. {r, eval = FALSE}
data(coalition)
.. ..

Estimate the model:

.. {r, eval = FALSE}
z.out <- zelig(duration   fract + numst2, model = “gamma”, data =
coalition)
.. ..

View the regression output:

.. {r, eval = FALSE}
summary(z.out)
.. ..

Set the baseline values (with the ruling coalition in the minority) and
the alternative values (with the ruling coalition in the majority) for
X:

.. {r, eval = FALSE}
x.low <- setx(z.out, numst2 = 0) RRR> x.high <- setx(z.out, numst2
= 1)
.. ..

Simulate expected values (qi$ev) and first differences (qi$fd):

.. {r, eval = FALSE}
s.out <- sim(z.out, x = x.low, x1 = x.high)
.. ..

.. {r, eval = FALSE}
summary(s.out)
.. ..

.. {r, eval = FALSE}
plot(s.out)
.. ..

Model
+++++

-  The Gamma distribution with scale parameter :math:`\alpha` has a
   *stochastic component*:

   .. math::

      \begin{aligned}
      Y &\sim& \textrm{Gamma}(y_i \mid \lambda_i, \alpha) \\
      f(y)  &=& \frac{1}{\alpha^{\lambda_i} \, \Gamma \lambda_i} \, y_i^{\lambda_i
        - 1} \exp -\left\{ \frac{y_i}{\alpha} \right\}\end{aligned}

   | for :math:`\alpha, \lambda_i, y_i > 0`.

-  The *systematic component* is given by

   .. math:: \lambda_i = \frac{1}{x_i \beta}

Quantities of Interest
+++++

-  The expected values (qi$ev) are simulations of the mean of the
   stochastic component given draws of :math:`\alpha` and :math:`\beta`
   from their posteriors:

   .. math:: E(Y) = \alpha \lambda_i.

-  The predicted values (qi$pr) are draws from the gamma distribution
   for each given set of parameters :math:`(\alpha, \lambda_i)`.

-  If x1 is specified, sim() also returns the differences in the
   expected values (qi$fd),

   .. math::

      E(Y \mid x_1) -
        E(Y \mid x)

   .

-  In conditional prediction models, the average expected treatment
   effect (att.ev) for the treatment group is

   .. math::

      \frac{1}{\sum_{i=1}^n t_i}\sum_{i:t_i=1}^n \left\{ Y_i(t_i=1) -
            E[Y_i(t_i=0)] \right\},

   where :math:`t_i` is a binary explanatory variable defining the
   treatment (:math:`t_i=1`) and control (:math:`t_i=0`) groups.
   Variation in the simulations are due to uncertainty in simulating
   :math:`E[Y_i(t_i=0)]`, the counterfactual expected value of
   :math:`Y_i` for observations in the treatment group, under the
   assumption that everything stays the same except that the treatment
   indicator is switched to :math:`t_i=0`.

-  In conditional prediction models, the average predicted treatment
   effect (att.pr) for the treatment group is

   .. math::

      \frac{1}{\sum_{i=1}^n t_i}\sum_{i:t_i=1}^n \left\{ Y_i(t_i=1) -
            \widehat{Y_i(t_i=0)} \right\},

   where :math:`t_i` is a binary explanatory variable defining the
   treatment (:math:`t_i=1`) and control (:math:`t_i=0`) groups.
   Variation in the simulations are due to uncertainty in simulating
   :math:`\widehat{Y_i(t_i=0)}`, the counterfactual predicted value of
   :math:`Y_i` for observations in the treatment group, under the
   assumption that everything stays the same except that the treatment
   indicator is switched to :math:`t_i=0`.

Output Values
+++++

The output of each Zelig command contains useful information which you
may view. For example, if you run
``z.out <- zelig(y ~ x, model = gamma, data)``, then you may examine the
available information in ``z.out`` by using ``names(z.out)``, see the
coefficients by using z.out$coefficients, and a default summary of
information through ``summary(z.out)``. Other elements available through
the $ operator are listed below.

-  From the zelig() output object z.out, you may extract:

   -  coefficients: parameter estimates for the explanatory variables.

   -  residuals: the working residuals in the final iteration of the
      IWLS fit.

   -  fitted.values: the vector of fitted values.

   -  linear.predictors: the vector of :math:`x_{i}\beta`.

   -  aic: Akaike’s Information Criterion (minus twice the maximized
      log-likelihood plus twice the number of coefficients).

   -  df.residual: the residual degrees of freedom.

   -  df.null: the residual degrees of freedom for the null model.

   -  zelig.data: the input data frame if save.data = TRUE.

-  From summary(z.out), you may extract:

   -  coefficients: the parameter estimates with their associated
      standard errors, :math:`p`-values, and :math:`t`-statistics.

   -  cov.scaled: a :math:`k \times k` matrix of scaled covariances.

   -  cov.unscaled: a :math:`k \times k` matrix of unscaled covariances.

-  From the sim() output object s.out, you may extract quantities of
   interest arranged as matrices indexed by simulation :math:`\times`
   x-observation (for more than one x-observation). Available quantities
   are:

   -  qi$ev: the simulated expected values for the specified values of
      x.

   -  qi$pr: the simulated predicted values drawn from a distribution
      defined by :math:`(\alpha, \lambda_i)`.

   -  qi$fd: the simulated first difference in the expected values for
      the specified values in x and x1.

   -  qi$att.ev: the simulated average expected treatment effect for the
      treated from conditional prediction models.

   -  qi$att.pr: the simulated average predicted treatment effect for
      the treated from conditional prediction models.


See also
+++++

The gamma model is part of the stats package by . Advanced users may
wish to refer to ``help(glm)`` and ``help(family)``.
